library(readr)
library(org.Hs.eg.db)
library(DESeq2)

data.path="C:/Users/QUEEN/Desktop/NGS/kallisto"
files <- list.files(path=data.path,recursive=T, pattern = "tsv")
temp <- read.table(file.path(data.path,files[1]), header=F)
temp=temp[-1,-2:-4]
#create a storing object kallisto.exp to save the whole read counts of each file read in an iteration
kallisto.exp=temp
rownames(kallisto.exp)=kallisto.exp[,1]
kallisto.exp=kallisto.exp[-1]
colnames(kallisto.exp)=c(files) 

for(i in 2: length(files))
  {
    # read the next file  
    temp <- read.table(files[i], header=F)
    temp = temp[-1,-2:-4]
    temp=temp[-1]
  
    kallisto.exp=cbind(kallisto.exp,temp)
}

colnames(kallisto.exp)=c(files)

coldata= as.data.frame(files)
class <- as.data.frame(factor(rep(c("N","T"), c(3, 3))))
coldata=cbind(coldata,class)
colnames(coldata)= c("sampl_id", "condition")

rownames(coldata)=coldata$sampl_id
coldata=coldata[colnames(kallisto.exp),]

genes=rownames(kallisto.exp)
kallisto.exp1=lapply(kallisto.exp, function(x) round(as.numeric(as.character(x)))
kallisto.exp1=apply(round(kallisto.exp1),2,as.integer)
rownames(kallisto.exp)=genes


condn="N"
condt="T"

dds_k = DESeqDataSetFromMatrix( countData = kallisto.exp1 , colData = coldata, design = ~ condition)
dds_k.run = DESeq(dds_k)
res.k=results(dds_k.run, contrast = c("condition",condn, condt))
res.k=as.data.frame(res.k[complete.cases(res.k), ])
res.dg.k=res.k[res.k$padj< 0.05 & abs(res.k$log2FoldChange)>log2(2),]
